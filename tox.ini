[tox]
envlist=cs,ann,utc,report
skipsdist=True
toxworkdir=/tmp/ingot_prometheus.tox
basepython=python3.8


[testenv:reformat]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/format
deps=black
commands=black {posargs} docs ingot_prometheus scripts setup.py


[testenv:ann]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
deps=mypy
commands=mypy --ignore-missing-imports --show-error-codes {posargs} docs ingot_prometheus scripts setup.py


[testenv:cs]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
deps=
    black
    flake8
commands=
    black --diff --check {posargs} docs ingot_prometheus scripts setup.py
    flake8 {posargs} docs ingot_prometheus scripts setup.py


[testenv:ut]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
install_command=pip install {opts} {packages}
deps=-r {toxinidir}/requirements.txt
commands=
    python -m unittest {posargs}


[testenv:utc]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
install_command=pip install {opts} {packages}
deps=
    -r {toxinidir}/requirements.txt
    coverage
commands=
    coverage run -m unittest {posargs}


[testenv:report]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
install_command=pip install {opts} {packages}
deps=coverage
commands=
    coverage report
    coverage html -d htmlcov


[testenv:doc]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
install_command=pip install {opts} {packages}
deps=
    sphinx
commands=
    sphinx-apidoc --separate --no-toc --no-headings --module-first --output-dir=docs/modules --ext-viewcode ingot_prometheus
    sphinx-build -b html docs docs/build -v


[testenv:build]
basepython={[tox]basepython}
install_command=pip install {opts} {packages}
deps=
    -r {toxinidir}/requirements.txt
passenv=
    INGOT_PROMETHEUS_VERSION_SUFFIX
commands=
    python scripts/create_package_version_file.py
    python setup.py sdist bdist_wheel


[testenv:upload]
recreate=False
basepython={[tox]basepython}
envdir={toxworkdir}/{envname}
install_command=pip install {opts} {packages}
deps=
    twine
passenv =
    PYPI_REPOSITORY_ALIAS
setenv =
    PYPI_REPOSITORY_ALIAS = {env:PYPI_REPOSITORY_ALIAS:testpypi}
commands=
    twine upload --repository={env:PYPI_REPOSITORY_ALIAS} {posargs}
